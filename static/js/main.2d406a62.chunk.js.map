{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","searchText","setSearchText","reset","addMovie","useState","setMovie","isError","setIsError","isLoading","setIsLoading","searchMovie","e","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","movieFromServer","Title","Plot","Poster","imdbID","newMovie","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","trim","length","classNames","disabled","onClick","foundMovie","App","setMovies","setQuery","useCallback","findIndex","v","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d406a62.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  searchText: string;\n  setSearchText: (text: string) => void;\n  reset: () => void;\n  addMovie: (movie: Movie) => void;\n};\n\nconst defaultPicture = (\n  'https://via.placeholder.com/360x270.png?text=no%20preview'\n);\n\nexport const FindMovie: React.FC<Props> = ({\n  searchText,\n  setSearchText,\n  reset,\n  addMovie,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const eventChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    if (value.trim().length === 0) {\n      setSearchText('');\n\n      return;\n    }\n\n    value.trim();\n    setSearchText(value);\n    setIsError(false);\n  };\n\n  const handleClick = (foundMovie: Movie) => {\n    reset();\n    addMovie(foundMovie);\n    setMovie(null);\n  };\n\n  const searchMovie = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const movieFromServer = await getMovie(searchText);\n\n    if ('Error' in movieFromServer) {\n      setIsError(true);\n    } else {\n      const {\n        Title,\n        Plot,\n        Poster,\n        imdbID,\n      } = movieFromServer;\n\n      const newMovie = {\n        title: Title,\n        description: Plot,\n        imgUrl: Poster !== 'N/A'\n          ? Poster\n          : defaultPicture,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        imdbId: imdbID,\n      };\n\n      setMovie(newMovie);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={searchMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchText}\n              onChange={eventChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!searchText}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  handleClick(movie);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=1e7c643d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n\n  const addMovie = (movie: Movie) => {\n    const index = movies.findIndex(v => v.imdbId === movie.imdbId);\n\n    if (index !== -1) {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  const reset = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          searchText={query}\n          setSearchText={setQuery}\n          reset={reset}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}